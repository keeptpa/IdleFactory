@page "/IronBoilerDetail/{buildingIndex}"
@using IdleFactory.Game.Building
@using IdleFactory.Util
@using Microsoft.Extensions.Localization
@using IdleFactory.Components.Components
@rendermode InteractiveServer
@inherits BaseRefreshablePage
@inject IStringLocalizer<Resources> Localizer

<h3>@Localizer["str.buildingDetail"]</h3>
@if (building != null)
{
    <MachineDetailBaseHeader machine="@this.building"/>
    <hr class="hr"/>
    
    <div>@Localizer["str.temperature"]: @building.Temperature</div>
    <div>@Localizer["str.remainFuelValue"]: @building.RemainFuelValue J</div>
    <div hidden="@(!building.CanCookRecipe())" class=@($"fire {(building.RemainFuelValue > 0 ? "" : "paused")}")>🔥</div>
    
    <div class="container">
        @*Inputs*@
        <div class="row">
            <div class="col">
                @Localizer["str.input"]
                @for (int i = 0; i < building.GetMachineContainer().GetInputSlots().Length; i++)
                {
                    <div class="row">
                        <SlotComponent slot="@(building.GetMachineContainer().GetInputSlots()[i])"/>
                    </div>
                }
            </div>
            @*Outputs*@
            <div class="col">
                @Localizer["str.output"]
                @for (int i = 0; i < building.GetMachineContainer().GetOutputSlots().Length; i++)
                {
                    <div class="row">
                        <SlotComponent isOutput="@true" slot="@(building.GetMachineContainer().GetOutputSlots()[i])"/>
                    </div>
                }
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public string buildingIndex { get; set; }
    private IronBoiler? building;

    protected override void OnInitialized()
    {
        StartTimer(1);
        building = Utils.GetBuildingWithIndex(int.Parse(buildingIndex)) as IronBoiler;
        base.OnInitialized();
    }

    protected override void OnTimer(object? state)
    {
        base.OnTimer(state);
        SafeStateHasChanged();
    }
}